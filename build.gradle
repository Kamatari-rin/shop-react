plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.3' apply false
	id 'io.spring.dependency-management' version '1.1.7'
}

allprojects {
	group = 'com.example'
	version = '0.0.2-SNAPSHOT'

	repositories {
		mavenCentral()
	}
}

subprojects {
	apply plugin: 'java'
	apply plugin: 'org.springframework.boot'
	apply plugin: 'io.spring.dependency-management'

	java {
		toolchain {
			languageVersion = JavaLanguageVersion.of(21)
		}
	}

	dependencyManagement {
		imports {
			mavenBom("org.springframework.boot:spring-boot-dependencies:3.4.3")
		}
	}

	dependencies {
		compileOnly 'org.projectlombok:lombok'
		annotationProcessor 'org.projectlombok:lombok'
		testImplementation 'org.springframework.boot:spring-boot-starter-test'
		testImplementation 'io.projectreactor:reactor-test'
		testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
		testImplementation platform('org.junit:junit-bom:5.9.1')
		testImplementation 'org.junit.jupiter:junit-jupiter'
	}

	tasks.named('test') {
		useJUnitPlatform()
	}
}

configure(project(':common')) {
	dependencies {
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
		implementation 'org.postgresql:r2dbc-postgresql'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-cache'
		implementation 'org.springframework.boot:spring-boot-starter-aop'
	}
}

configure(project(':cart-service')) {
	dependencies {
		implementation project(':common')
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
		implementation 'org.postgresql:r2dbc-postgresql'
		implementation 'org.springframework.boot:spring-boot-starter-validation'
		runtimeOnly 'org.postgresql:postgresql'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'org.springframework.boot:spring-boot-starter-cache'
		implementation 'org.mapstruct:mapstruct:1.5.5.Final'
		annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.5.Final'
		implementation 'de.codecentric:spring-boot-admin-starter-client:3.4.3'
	}
}

//configure([project(':user-service'), project(':product-catalog'), project(':product-detail'), project(':orders-list'), project(':order-detail'), project(':purchase-service')]) {
//	dependencies {
//		implementation project(':common')
//		implementation 'org.springframework.boot:spring-boot-starter-webflux'
//		implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
//		implementation 'io.r2dbc:r2dbc-postgresql'
//		implementation 'org.springframework.boot:spring-boot-starter-validation'
//		runtimeOnly 'org.postgresql:postgresql'
//		implementation 'org.springframework.boot:spring-boot-starter-actuator'
//		implementation 'org.springframework.boot:spring-boot-starter-cache'
//		implementation 'de.codecentric:spring-boot-admin-starter-client:3.4.3'
//	}
//}

configure(project(':api-gateway')) {
	dependencies {
		implementation project(':common')
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		implementation 'org.springframework.cloud:spring-cloud-starter-gateway'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
		implementation 'de.codecentric:spring-boot-admin-starter-client:3.4.3'
	}
}

configure(project(':admin-server')) {
	dependencies {
		implementation 'de.codecentric:spring-boot-admin-starter-server:3.4.3'
		implementation 'org.springframework.boot:spring-boot-starter-webflux'
		implementation 'org.springframework.boot:spring-boot-starter-actuator'
	}
}

configure(project(':db-migrations')) {
	dependencies {
		implementation 'org.flywaydb:flyway-core'
		implementation 'org.postgresql:postgresql'
	}
}