spring:
  application:
    name: cart-service
  r2dbc:
    url: r2dbc:postgresql://db:5432/cartdb
    username: cart_service_user
    password: cart-service_password
    pool:
      max-size: 10
      min-idle: 5
      max-idle-time: 30s
      max-create-connection-time: 30s
      max-life-time: 600s
      name: CartServiceHikariPool
      validation-query-timeout: 3s
  boot:
    admin:
      client:
        url: http://admin-server:8081
  cache:
    cache-names: carts
    redis:
      time-to-live: PT5S
  data:
    redis:
      host: redis
      port: 6379
  security:
    oauth2:
      client:
        registration:
          cart-service:
            client-id: cart-service
            client-secret: ZdBu4e28rbQqN5q6K189gB5WlrIECkjT
            authorization-grant-type: client_credentials
            provider: keycloak
        provider:
          keycloak:
            token-uri: http://keycloak:8080/realms/shop-realm/protocol/openid-connect/token

      resourceserver:
        jwt:
          jwk-set-uri: "http://keycloak:8080/realms/shop-realm/protocol/openid-connect/certs"

security-config:
  enabled: true
  permit-all-paths:
      - "/actuator/**"
      - "/api/cart/anonymous/**"
  client-id: frontend-client
  jwk-set-uri: "http://keycloak:8080/realms/shop-realm/protocol/openid-connect/certs"
  allowed-roles:
      - "ROLE_USER"
      - "purchase-service"

springdoc:
  api-docs:
    path: /api-docs
  swagger-ui:
    path: /swagger-ui.htm

management:
  endpoints:
    web:
      exposure:
        include: health,info,env,metrics,loggers
  endpoint:
    health:
      show-details: always

health:
  cart-service:
    table:
      carts: carts
      cart-items: cart_items
    schema: public

info:
  app:
    name: ${spring.application.name}
    description: This is the ${spring.application.name} module.
    version: 1.0.0

logbook: {}

logging:
  level:
    org.zalando.logbook: TRACE
    org.zalando.logbook.netty: TRACE
    org.example: DEBUG
    org.example.util: INFO
    org.springframework.boot.actuate: WARN
    org.springframework.web: WARN
    org.springframework.boot.autoconfigure: INFO
    org.springframework.web.filter: WARN
    io.opentelemetry: DEBUG
    org.springframework.security: DEBUG

product:
  detail:
    url: http://product-detail:8080/api/products/