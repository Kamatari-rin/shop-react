services:
  api-gateway:
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    depends_on:
      - cart-service
      - product-detail
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx768m -Xms512m
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=api-gateway
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  admin-server:
    build:
      context: ./admin-server
      dockerfile: Dockerfile
    ports:
      - "8081:8081"
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx512m -Xms256m -XX:+EnableDynamicAgentLoading
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=admin-server
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx768m -Xms512m
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=user-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  product-catalog:
    build:
      context: ./product-catalog
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx768m -Xms512m
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=product-catalog
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  product-detail:
    build:
      context: ./product-detail
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx768m -Xms512m
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=product-detail
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  cart-service:
    build:
      context: ./cart-service
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx768m -Xms512m
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=cart-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  order-service:
    build:
      context: ./order-service
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx768m -Xms512m
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=order-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  purchase-service:
    build:
      context: ./purchase-service
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx768m -Xms512m
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=purchase-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  wallet-service:
    build:
      context: ./wallet-service
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
      db-migrations:
        condition: service_completed_successfully
    networks:
      - app-network
    environment:
      - JAVA_OPTS=-Xmx768m -Xms512m
      - JAVA_TOOL_OPTIONS=-javaagent:/otel/opentelemetry-javaagent.jar
      - OTEL_METRICS_EXPORTER=none
      - OTEL_SERVICE_NAME=wallet-service
      - OTEL_EXPORTER_OTLP_ENDPOINT=http://otel-collector:4318
      - OTEL_INSTRUMENTATION_LOGBACK_MDC_ENABLED=true
      - OTEL_LOGS_EXPORTER=none
    volumes:
      - ./otel/opentelemetry-javaagent.jar:/otel/opentelemetry-javaagent.jar
    mem_limit: 1g
    mem_reservation: 512m

  db:
    image: postgres:15
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_MULTIPLE_DATABASES: userdb,productdb,cartdb,ordersdb,purchasedb,walletdb
      POSTGRES_SHARED_BUFFERS: 512MB
      POSTGRES_WORK_MEM: 8MB
    ports:
      - "5432:5432"
    volumes:
      - ./init-scripts:/docker-entrypoint-initdb.d
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - app-network
    mem_limit: 2g
    mem_reservation: 1g

  db-migrations:
    build:
      context: ./db-migrations
      dockerfile: Dockerfile
    depends_on:
      db:
        condition: service_healthy
    networks:
      - app-network
    mem_limit: 512m
    mem_reservation: 256m

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.101.0
    command: [ "--config=/etc/otel/config.yaml" ]
    volumes:
      - ./otel/otel-collector-config.yaml:/etc/otel/config.yaml
    ports:
      - "4317:4317" # OTLP gRPC
      - "4318:4318" # OTLP HTTP
    networks:
      - app-network

  jaeger:
    image: jaegertracing/all-in-one:1.56
    ports:
      - "16686:16686"
      - "14268:14268"
    networks:
      - app-network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.14.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    networks:
      - app-network
    mem_limit: 1g
    mem_reservation: 512m

  logstash:
    image: docker.elastic.co/logstash/logstash:8.14.0
    volumes:
      - ./logstash.conf:/usr/share/logstash/pipeline/logstash.conf
    ports:
      - "5044:5044"
    depends_on:
      - elasticsearch
    networks:
      - app-network
    mem_limit: 1g
    mem_reservation: 512m

  kibana:
    image: docker.elastic.co/kibana/kibana:8.14.0
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - NODE_OPTIONS=--max-old-space-size=1024
      - xpack.security.encryptionKey=${KIBANA_SECURITY_KEY}
      - xpack.encryptedSavedObjects.encryptionKey=${KIBANA_SAVED_OBJECTS_KEY}
      - xpack.reporting.encryptionKey=${KIBANA_REPORTING_KEY}
    ports:
      - "5601:5601"
    depends_on:
      - elasticsearch
    networks:
      - app-network
    mem_limit: 1g
    mem_reservation: 512m

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    networks:
      - app-network
    depends_on:
      - api-gateway
    mem_limit: 1g
    mem_reservation: 512m

  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    networks:
      - app-network
    mem_limit: 512m
    mem_reservation: 256m

networks:
  app-network:
